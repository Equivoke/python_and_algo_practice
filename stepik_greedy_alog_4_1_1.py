"""
По данным nn отрезкам необходимо найти множество точек минимального размера, для которого каждый из отрезков содержит
хотя бы одну из точек.

В первой строке дано число 1≤n≤100 отрезков. Каждая из последующих nn строк содержит по два числа 10^9≤l≤r≤10^9,
задающих начало и конец отрезка. Выведите оптимальное число mm точек и сами mm точек.
Если таких множеств точек несколько, выведите любое из них.
"""
# Осуществляем чтение исходных данных
list_of_segments = [list(map(int, input().split())) for _ in range(int(input()))]
# Сортируем список по возрастанию правого конца отрезков
list_of_segments.sort(key=lambda x: max(x))
# Правый конец первого отрезка - надёжный шаг
list_of_dots = [list_of_segments[0][1]]
# Проверяем, покрывает ли наш надёжный шаг следующий отрезок
for i in range(1, len(list_of_segments)):
    # Если левый конец отрезка входит в наш отрезок - ничего не делаем
    if list_of_dots[-1] >= list_of_segments[i][0]:
        pass
    # Если левый конец отрезка не входит в наш отрезок - записываем его правый конец и работаем с ним
    else:
        list_of_dots.append(list_of_segments[i][1])
        i += 1
# Выводим данные
print(len(list_of_dots))
print(*list_of_dots)
