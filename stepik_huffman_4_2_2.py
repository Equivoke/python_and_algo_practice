"""
Задача на программирование: декодирование Хаффмана

Восстановите строку по её коду и беспрефиксному коду символов.
В первой строке входного файла заданы два целых числа k и l через пробел — количество различных букв,
встречающихся в строке, и размер получившейся закодированной строки, соответственно.
В следующих kk строках записаны коды букв в формате "letter: code". Ни один код не является префиксом другого.
Буквы могут быть перечислены в любом порядке. В качестве букв могут встречаться лишь строчные буквы
латинского алфавита; каждая из этих букв встречается в строке хотя бы один раз. Наконец, в последней строке
записана закодированная строка. Исходная строка и коды всех букв непусты. Заданный код таков,
что закодированная строка имеет минимальный возможный размер.

В первой строке выходного файла выведите строку s. Она должна состоять из строчных букв латинского алфавита.
Гарантируется, что длина правильного ответа не превосходит 10^4 символов.
"""
# Парсим исходные данные
inp_k, inp_el = map(int, input().split())
list_of_codes = [list(map(str, input().split())) for _ in range(inp_k)]
list_with_enc = sorted(list_of_codes, key=lambda x: x[1])
dec_string = input()
enc_str = ""
# Прогоняем строку в цикле, отрезаем, если совпало
while dec_string:
    for i in range(len(list_with_enc)):
        if dec_string.startswith(list_with_enc[i][1]):
            enc_str += list_with_enc[i][0]
            dec_string = dec_string[len(list_with_enc[i][1]):]
            break
fin_str = enc_str.replace(":", "")
print(fin_str)
